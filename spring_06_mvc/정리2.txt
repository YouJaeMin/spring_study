트랜잭션		

정의 - 특정 작업을 진행할 때 하나의 작업을 시작하여 완료되는 단위를 말한다.
					
용어	

	롤백 - 
	커밋
	세이브포인트
		
선언방법		
	
	템플릿


	(http://isstory83.tistory.com/115)
	선언적 트랜잭션 - Transaction Template와 달리 트랜잭션 처리를 코데엇 직접적으로 수행하지 않음
			설정 파일이나 어노테이션을 이용하여 트랜잭션의 범위, 롤백 규칙 등을 정의

		1) <tx:advice> 태그를 이용하여 트랜잭션 처리
		2) @Transaction 어노테이션을 이용한 트랜잭션 설정
		3) TransactionProxyFactoryBean 태그를 이용한 트랜잭션 처리


MVC 패턴

main - service - dao,dto - orm(mybatis) - db
(V,C)  (		M		)

model1,model2 의 비교 

model1
	1. JSP/Servlet만을 이용하여 개발하는 경우.

	2. JSP + Java Bean을 이용하여 개발하는 경우.

	3. JSP + Custom Tag를 이용하여 개발하는 경우.

	4. 1,2,3이 적절히 혼합하여 개발되는 경우.

Model 1개발 방식을 사용하면 다음과 같은 장점이 있다.

1. 개발 속도가 빠르다.

2. 개발자의 스킬이 낮아도 배우기 쉬워 빠르게 적용할 수 있다.

그러나 Model 1을 사용할 경우 다음과 같은 단점이 있다.

1. JSP페이지에서 프리젠테이션 로직과 비즈니스 로직을 모두 포함하기 때문에 JSP페이지가 너무 복잡해 진다.

2. 프리젠테이션 로직과 비즈니스 로직이 혼재되어 있기 때문에 개발자와 디자이너의 분리된 작업이 어려워진다.

3. JSP페이지의 코드가 복작해 짐으로 인해 유지보수 하기 어려워진다.


model2

Model : 모델은 애플리케이션의 정보, 즉 데이터를 나타낸다.

View : 뷰는 사용자에게 보여주는 인터페이스, 즉 화면을 이야기한다. 
	자바 웹 애플리케이션에서는 JSP를 의미한다.

Controller : 컨트롤러는 비지니스 로직과 모델의 상호동작의 조정 역할을 한다.
	 MVC2에서는 서블릿이 흐름을 제어하는 컨트롤러 역할을 수행한다. 


Spring MVC 방식을 이용



get server .xml URLEncoding = "UTF-8"

post	1) request.setCharterEncoding("UTF-8")
		2) Filter 인터페이스를 상속받아 클래스로 구현 등록시킴 @webFilter (어노테이션을 이용)
		3) 스프링에서는 CharacterEncodingFilter 등록